Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.4.181 Build 20170411

Compiler options: -std=c99 -O3 -parallel -par-threshold0 -qopt-report-phase=par -qopt-report:5 -o ./bin/kmeans_icc

Begin optimization report for: main(int, char **)

    Report from: Auto-parallelization optimizations [par]


LOOP BEGIN at ./src/kmeans_icc.c(20,5) inlined into ./src/kmeans_icc.c(37,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)

   LOOP BEGIN at ./src/kmeans_icc.c(22,9) inlined into ./src/kmeans_icc.c(37,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)
   LOOP END
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(20,5) inlined into ./src/kmeans_icc.c(38,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)

   LOOP BEGIN at ./src/kmeans_icc.c(22,9) inlined into ./src/kmeans_icc.c(38,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)
   LOOP END
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(44,5)
   remark #17102: loop was not parallelized: not a parallelization candidate

   LOOP BEGIN at ./src/kmeans_icc.c(49,9)
      remark #17102: loop was not parallelized: not a parallelization candidate

      LOOP BEGIN at ./src/kmeans_icc.c(53,13)
         remark #17102: loop was not parallelized: not a parallelization candidate

         LOOP BEGIN at ./src/kmeans_icc.c(12,5) inlined into ./src/kmeans_icc.c(54,30)
         <Peeled loop for vectorization>
         LOOP END

         LOOP BEGIN at ./src/kmeans_icc.c(12,5) inlined into ./src/kmeans_icc.c(54,30)
            remark #17109: LOOP WAS AUTO-PARALLELIZED
            remark #17101: parallel loop shared={ } private={ } firstprivate={ y x _i j i } lastprivate={ } firstlastprivate={ } reduction={ _resp }
         LOOP END

         LOOP BEGIN at ./src/kmeans_icc.c(12,5) inlined into ./src/kmeans_icc.c(54,30)
         <Alternate Alignment Vectorized Loop>
         LOOP END

         LOOP BEGIN at ./src/kmeans_icc.c(12,5) inlined into ./src/kmeans_icc.c(54,30)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at ./src/kmeans_icc.c(73,9)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between centroids[i][j] (76:17) and centroids[i][j] (76:17)
      remark #17106: parallel dependence: assumed OUTPUT dependence between centroids[i][j] (76:17) and centroids[i][j] (76:17)

      LOOP BEGIN at ./src/kmeans_icc.c(75,13)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed OUTPUT dependence between centroids[i][j] (76:17) and centroids[i][j] (76:17)
         remark #17106: parallel dependence: assumed OUTPUT dependence between centroids[i][j] (76:17) and centroids[i][j] (76:17)
      LOOP END
   LOOP END

   LOOP BEGIN at ./src/kmeans_icc.c(80,9)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between centroids[cluster][j] (85:21) and centroids[cluster][j] (85:21)
      remark #17106: parallel dependence: assumed OUTPUT dependence between centroids[cluster][j] (85:21) and centroids[cluster][j] (85:21)

      LOOP BEGIN at ./src/kmeans_icc.c(84,17)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ./src/kmeans_icc.c(84,17)
         remark #17109: LOOP WAS AUTO-PARALLELIZED
         remark #17101: parallel loop shared={ } private={ } firstprivate={ points cluster centroids j i } lastprivate={ } firstlastprivate={ } reduction={ }
      LOOP END

      LOOP BEGIN at ./src/kmeans_icc.c(84,17)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at ./src/kmeans_icc.c(84,17)
      <Remainder loop for vectorization>
      LOOP END

      LOOP BEGIN at ./src/kmeans_icc.c(84,17)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at ./src/kmeans_icc.c(90,9)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between centroids[i][j] (92:17) and centroids[i][j] (92:17)
      remark #17106: parallel dependence: assumed OUTPUT dependence between centroids[i][j] (92:17) and centroids[i][j] (92:17)

      LOOP BEGIN at ./src/kmeans_icc.c(91,13)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ./src/kmeans_icc.c(91,13)
         remark #17109: LOOP WAS AUTO-PARALLELIZED
         remark #17101: parallel loop shared={ counts } private={ } firstprivate={ centroids j i } lastprivate={ } firstlastprivate={ } reduction={ }
      LOOP END

      LOOP BEGIN at ./src/kmeans_icc.c(91,13)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at ./src/kmeans_icc.c(91,13)
      <Remainder loop for vectorization>
      LOOP END

      LOOP BEGIN at ./src/kmeans_icc.c(91,13)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5) inlined into ./src/kmeans_icc.c(54,30)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5) inlined into ./src/kmeans_icc.c(54,30)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5) inlined into ./src/kmeans_icc.c(54,30)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5) inlined into ./src/kmeans_icc.c(54,30)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(84,17)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(84,17)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(84,17)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(84,17)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(91,13)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(91,13)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(91,13)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(91,13)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: euclidean(double *, double *, size_t)

    Report from: Auto-parallelization optimizations [par]


LOOP BEGIN at ./src/kmeans_icc.c(12,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ } private={ } firstprivate={ y x i } lastprivate={ } firstlastprivate={ } reduction={ resp }
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ./src/kmeans_icc.c(12,5)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: init(double **, size_t)

    Report from: Auto-parallelization optimizations [par]


LOOP BEGIN at ./src/kmeans_icc.c(20,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between call:malloc(size_t) (21:27) and vec[i] (23:13)
   remark #17106: parallel dependence: assumed ANTI dependence between vec[i] (23:13) and call:malloc(size_t) (21:27)

   LOOP BEGIN at ./src/kmeans_icc.c(22,9)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between vec[i][j] (23:13) and vec[i][j] (23:13)
      remark #17106: parallel dependence: assumed OUTPUT dependence between vec[i][j] (23:13) and vec[i][j] (23:13)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:rand(void) (23:25) and call:rand(void) (23:25)
   LOOP END
LOOP END
===========================================================================
